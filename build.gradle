/*
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */
apply plugin: 'java'

defaultTasks 'clean'

sourceSets {
    test.java.srcDir "src/test"
}

repositories {
    mavenCentral()
}

/*
configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}
*/

//Ensure the cucumber tests are executed as part of the build. Makes for a very pretty output.
//build.dependsOn cucumber

dependencies {
    compile 'com.codeborne:selenide:4.8'
    compile 'org.junit:junit5-engine:5.0.0-ALPHA'
    compile 'org.apache.commons:commons-pool2:2.4.3'
    compile 'org.apache.maven.plugins:maven-surefire-report-plugin:2.20.1'

    /*
In order to work around a really flagrant bug ( http://issues.gradle.org/browse/GRADLE-732 )
You have to create a configuration that includes the jar.archivePath (the jar.archivePath is created by the java plugin)
and give it the same name as the cucumberRuntime configuration, or name it something different and have the cucumberRuntime
configuration extend from it as well.
Still a bug in gradle 2.4, despite their saying that they would fix it before 1.0
VERY ANNOYING BUG
*/ ///cucumberRuntime files("${jar.archivePath}")

    compile 'info.cukes:cucumber-java:1.2.5'
    compile 'info.cukes:cucumber-junit:1.2.5'
   // testCompile fileTree(dir: 'libs', include: '*.jar')

}

/*task pucTest(type: test) {

}

task testCucumber(type: JavaExec, dependsOn: [testClasses]) {
    description = 'Runs all feature files with Cucumber'
    ext.outputDir = file("$buildDir/target/reports")

    classpath = sourceSets.test.runtimeClasspath
    main = 'cucumber.api.cli.Main'
    args    '--format', 'pretty',
            '--format', 'html:target/cucumber',
            '--glue', 'foo.bar.fum.cucumber',   // foo.bar.fum.cucumber is the package for Steps, Hooks etc.
            '--strict',
            sourceSets.test.output.resourcesDir // Find feature files stored in src/test/resources
}*/

/*task cucumber() {
    dependsOn assemble
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime
            args = ['--plugin', 'pretty', '--glue', 'src/main/java/services', 'src/test/java/features']

        }
    }
}*/

/*
task executeFeatures(type: Test) {
    // enable TestNG support (default is JUnit)
    //useTestNG()
    options {
        //useDefaultListeners = false
//        listeners << ''
        jvmArgs = ['-Dcucumber.options= ' +
                           '--glue org.company.app ' +
                           '--plugin pretty ' +
                           '--plugin json:build/cucumber/cucumber.json ' +
                           '--plugin rerun:build/cucumber/rerun.txt ' +
                           //splitFeatureFolders(featureFolders) + ' ' +
                           cucumberOptions]
    }

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // set JVM arguments for the test JVM(s)
    scanForTestClasses = false
    // ignoreFailures = true

    //turn off Gradle's HTML report to avoid replacing the reports generated by TestNG library:
    reports.html.enabled = false

    doLast {
        generateReport('build/cucumber/cucumber.json', 'build/cucumber/reports')
    }
}*/
