import org.gradle.api.tasks.JavaExec
import org.gradle.api.tasks.testing.Test
import org.gradle.api.tasks.wrapper.Wrapper

/*
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

defaultTasks 'clean', 'test'

sourceSets {
    main {
        java { srcDir 'src' }
        resources { srcDir 'src' }
    }
    test {
        java { srcDir 'test' }
        resources { srcDir 'test' }
    }
}

repositories {
    mavenCentral()
}

/*configurations {
    cucumberRuntime {
        extendsFrom testCompile
        extendsFrom testRuntime
    }
}*/

dependencies {
    compile 'com.codeborne:selenide:4.8'
    compile 'org.junit:junit5-engine:5.0.0-ALPHA'
    compile 'info.cukes:cucumber-java:1.2.5'
    compile 'info.cukes:cucumber-junit:1.2.5'
    compile 'com.google.guava:guava:23.5-jre'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile fileTree(dir: 'libs', include: '*.jar')

}

test {
/*    dependsOn assemble, compileTestJava
    systemProperties System.getProperties()*/
    testLogging.showStandardStreams = true
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
    jarFile = './gradle/wrapper/gradle-wrapper.jar'
    scriptFile = './gradlew'
}

task runFeature(type: Test, dependsOn: test) {
    scanForTestClasses = false
    includes = ['**suites.PUC_Feature_Suite.class']
    test {
        excludes = ['**suites.PUC_Test_Suite.class',
                    '**tests.PUC_SmokeTest_Suite.class',
                    '**tests.PUC_SmokeTest.class',
                    '**tests.PUC_UITest.class']
    }
}

task runUITest(type: Test, dependsOn: testClasses) {
    scanForTestClasses = false
    includes = ['**/*PUC_Test_Suite.class']
}

task runSmokeTest(type: Test, dependsOn: testClasses) {
    scanForTestClasses = true
    includes = ['**/*PUC_SmokeTest_Suite.class']
}

tasks.withType(Test) {
    testLogging {
        events 'started', 'passed'
    }
}

/*task testCucumber(type: JavaExec, dependsOn: [testClasses]) {
    description = 'Runs all feature files with Cucumber'
    ext.outputDir = file("$buildDir/target/reports")

    classpath = sourceSets.test.runtimeClasspath
    main = 'cucumber.api.cli.Main'
    args '--format', 'pretty',
            '--format', 'html:target/cucumber',
            '--glue', 'foo.bar.fum.cucumber',   // foo.bar.fum.cucumber is the package for Steps, Hooks etc.
            '--strict',
            sourceSets.test.output.resourcesDir // Find feature files stored in src/test/resources
}*/

/*task cucumber {
    // dependsOn assemble compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime
            //environment(-DCucumber.Options="--name=MyFeature"' )
            args = ['--plugin', 'pretty', '--glue', 'src/main/java/steps', 'src/test/java/features']

        }
    }
}*/